#!/usr/bin/env node
var express = require('express');
var http = require('http');
var irc = require('irc');
var bot = new irc.Client('irc.twitch.tv', 'NephalemBot', {
    debug: true,
    channels: ['#maind3'],
    realName: 'nephalemnot',
    userName: 'NephalemBot',
    password: 'oauth:k6h1ypxk5v265y4bekibgxpjsbv6zg'
});
var twitch = require('./lib/twitch');
var command = new twitch.twitchCommands(bot,'#maind3');
var app = express();

bot.addListener('error', function(message) {
    console.error('ERROR: %s: %s', message.command, message.args.join(' '));
});

bot.addListener('message', function (from, to, message) {
    console.log('%s => %s: %s', from, to, message);

    if ( to.match(/^[#&]/) ) {
        // channel message
        if ( message.match(/hello/i) ) {
            bot.say(to, 'Hello there ' + from);
        }
        // if ( parseInt(message.substring(0,1)) > 0 ) {
        //     if (bot.vote.voteStarted) {
        //         var vote = message.substring(0,1);
        //         bot.vote.add(vote,from);
        //     }
        // }
        if (message.match(/^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$/)) {
          command.timeout(from,60);
          bot.say(to, 'Timed out '+from+', don\'t post links!');
        }

        // commands

        // //start a vote
        // if ( message.substring(0,10) == '!votestart' && (from == 'leagueproslive' || from == 'nnehl')) {
        //     command.slow(10);

        //     bot.vote(function(){
        //         command.slowoff()
        //     });

        //     bot.vote.start();
        // }
        // if (message.substring(0,6) == '!runes') {
        //     if (bot.runes !== 'undefined' && bot.summoner !== 'undefined' && bot.runes != '' && bot.summoner != '') {
        //         bot.say(bot.summoner+'\'s runes: '+bot.runes);
        //     }
        // }
        // if (message.substring(0,10) == '!masteries') {
        //     if (bot.masteries !== 'undefined' && bot.summoner !== 'undefined' && bot.masteries != '' && bot.summoner != '') {
        //         bot.say(bot.summoner+'\'s masteries: '+bot.masteries);
        //     }
        // }
        // if (message.substring(0,8) == '!playing' || message.substring(0,4) == '!pro' || message.substring(0,9) == '!summoner') {
        //     if (bot.champion !== 'undefined' && bot.summoner !== 'undefined' && bot.champion != '' && bot.summoner != '') {
        //         bot.say(bot.summoner+' is now playing as '+bot.champion);
        //     }
        // }
    }
    else {
        // private message
    }
});
bot.addListener('pm', function(nick, message) {
    console.log('Got private message from %s: %s', nick, message);
});
bot.addListener('join', function(channel, who) {
    console.log('%s has joined %s', who, channel);
});
bot.addListener('kick', function(channel, who, by, reason) {
    console.log('%s was kicked from %s by %s: %s', who, channel, by, reason);
});




/* server & rquests */
app.param('message', function(req,res,next,id){
  next();
});

app.param('user', function(req,res,next,id){
  next();
});

app.param('time', function(req,res,next,id){
  next();
});

app.param('color', function(req,res,next,id){
  next();
});

// app.get('/vote/start', function(req,_res){
//     command.slow(10);

//     bot.vote(function(){
//         command.slowoff()
//     });

//     bot.vote.start();
//     _res.send({'status':'ok'});
// });

// app.get('/vote/winner', function(req,_res){
//   var winner = bot.winner();
//   _res.send({'status':'ok', 'winner':winner});
// });


// app.get('/vote/timeout/:time', function(req,_res){
//   bot.vote.timeout(req.params.time);
//   _res.send({'status':'ok'});
// });

// app.get('/vote/inprogress/:message', function(req,_res){
//   bot.vote.inProgressMessage(req.params.message);
//   _res.send({'status':'ok'});
// });

// app.get('/vote/complete/:message', function(req,_res){
//   bot.vote.completeMessage(req.params.message);
//   _res.send({'status':'ok'});
// });

// app.get('/vote/option/:message', function(req,_res){
//   bot.vote.optionMessage(req.params.message);
//   _res.send({'status':'ok'});
// });

// app.get('/vote/message/:message', function(req,_res){
//   bot.vote.message(req.params.message);
//   _res.send({'status':'ok'});
// });

// app.get('/vote/add/:message', function(req,_res){
//   bot.vote.addoption(req.params.message);
//   _res.send({'status':'ok'});
// });

// app.get('/vote/messagecount/:time', function(req,_res){
//   bot.vote.messageCount(req.params.time);
//   _res.send({'status':'ok'});
// });

// app.get('/vote/channel/:user', function(req,_res){
//   bot.vote.channel(req.params.user);
//   _res.send({'status':'ok'});
// });

app.get('/say/:user/:message', function(req,_res){
  bot.say(req.params.user, req.params.message);
  _res.send({'status':'ok'});
});

app.get('/say/:message', function(req,_res){
  bot.say('#maind3', req.params.message);
  _res.send({'status':'ok'});
});

app.get('/ban/:user', function(req,_res){
  command.ban(req.params.user);
  _res.send({'status':'ok'});
});

app.get('/unban/:user', function(req,_res){
  command.unban(req.params.user);
  _res.send({'status':'ok'});
});

app.get('/timeout/:user', function(req,_res){
  command.timeout(req.params.user);
  _res.send({'status':'ok'});
});

app.get('/slow/:time', function(req,_res){
  command.slow(req.params.time);
  _res.send({'status':'ok'});
});

app.get('/slow', function(req,_res){
  command.slow();
  _res.send({'status':'ok'});
});

app.get('/slowoff', function(req,_res){
  command.slowoff();
  _res.send({'status':'ok'});
});

app.get('/mods', function(req,_res){
  command.mods();
  _res.send({'status':'ok'});
});

app.get('/color/:color', function(req,_res){
  command.color(req.params.color);
  _res.send({'status':'ok'});
});

app.get('/ignore/:user', function(req,_res){
  command.ignore(req.params.user);
  _res.send({'status':'ok'});
});

app.get('/unignore/:user', function(req,_res){
  command.ignore(req.params.user);
  _res.send({'status':'ok'});
});

app.get('/disconnect', function(req,_res){
  command.disconnect();
  _res.send({'status':'ok'});
});

app.get('/subscribers', function(req,_res){
  command.subscribers();
  _res.send({'status':'ok'});
});

app.get('/subscribersoff', function(req,_res){
  command.subscribersoff();
  _res.send({'status':'ok'});
});

app.get('/r9kbeta', function(req,_res){
  command.r9kbeta();
  _res.send({'status':'ok'});
});

app.get('/r9kbetaoff', function(req,_res){
  command.r9kbetaoff();
  _res.send({'status':'ok'});
});

app.get('/commercial/:time', function(req,_res){
  command.commercial(req.params.time);
  _res.send({'status':'ok'});
});

app.get('/host/:user', function(req,_res){
  command.host(req.params.user);
  _res.send({'status':'ok'});
});

app.get('/unhost', function(req,_res){
  command.unhost();
  _res.send({'status':'ok'});
});

app.get('/mod/:user', function(req,_res){
  command.mod(req.params.user);
  _res.send({'status':'ok'});
});

app.get('/unmod/:user', function(req,_res){
  command.unmod(req.params.user);
  _res.send({'status':'ok'});
});

// app.get('/runes/:message', function(req,_res){
//   bot.setRunes(req.params.message);
//   _res.send({'status':'ok'});
// });

// app.get('/masteries/:message', function(req,_res){
//   bot.setMasteries(req.params.message);
//   _res.send({'status':'ok'});
// });

// app.get('/summoner/:message', function(req,_res){
//   bot.setSummoner(req.params.message);
//   _res.send({'status':'ok'});
// });

// app.get('/champion/:message', function(req,_res){
//   bot.setChampion(req.params.message);
//   _res.send({'status':'ok'});
// });

http.createServer(app).listen(1338, function() {
  console.log('App started');
});
